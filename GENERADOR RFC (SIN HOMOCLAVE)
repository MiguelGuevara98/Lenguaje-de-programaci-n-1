#include <iostream>
#include <string>

std::string generaRFC(std::string apellidoPaterno, std::string apellidoMaterno, std::string nombre, std::string fechaNacimiento) {
    std::string rfc;

    rfc += apellidoPaterno[0];
    for (char c : apellidoPaterno) {
        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
            rfc += c;
            break;
        }
    }

    rfc += apellidoMaterno.empty() ? 'X' : apellidoMaterno[0];
    rfc += nombre[0];

    if (fechaNacimiento.length() == 10 && fechaNacimiento[4] == '-' && fechaNacimiento[7] == '-') {
        rfc += fechaNacimiento.substr(2, 2);
        rfc += fechaNacimiento.substr(5, 2);
        rfc += fechaNacimiento.substr(8, 2);
    }
    else {
        std::cout << "Error: Formato de fecha incorrecto. Utiliza YYYY-MM-DD." << std::endl;
        return "";
    }

    std::string antisonantes[] = { "BUEI", "CACA", "MAME", "PENE", "PUTO", "GUEY", "JOTO", "COJE", "FETO", "KULO" };
    for (const auto& palabra : antisonantes) {
        if (rfc.find(palabra) != std::string::npos) {
            rfc[1] = 'X';
            break;
        }
    }

    return rfc;
}

int main() {
    std::string apellidoPaterno, apellidoMaterno, nombre, fechaNacimiento;

    std::cout << "Apellido Paterno: ";
    std::cin >> apellidoPaterno;
    std::cout << "Apellido Materno: ";
    std::cin >> apellidoMaterno;
    std::cin.ignore();

    std::cout << "Nombre: ";
    std::getline(std::cin, nombre);

    std::cout << "Fecha de Nacimiento (YYYY-MM-DD): ";
    std::cin >> fechaNacimiento;

    std::string rfc = generaRFC(apellidoPaterno, apellidoMaterno, nombre, fechaNacimiento);

    if (!rfc.empty()) {
        std::cout << "RFC generado: " << rfc << std::endl;
    }

    return 0;
}

